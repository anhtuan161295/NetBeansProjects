/*
 * This program demonstrate the use of Socket and server Socket classes in
 * networking Application.
 *
 * Copyright (c) 2007 Aptech Software Limited. All Rights Reserved.
 */
package ss6_Demo;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintStream;
import java.net.Socket;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;

/**
 *
 * @author Vincent
 */
public class Messenger_CLIENT extends javax.swing.JFrame {

    Socket server;  //Điểm cuối của server
    BufferedReader br; //Bộ đếm lấy dữ liệu từ Server
    PrintStream ps; //Bộ đệm nhận dữ liệu từ Server
    ClientThread clientThread;

    /**
     * Creates new form ChatClient
     */
    public Messenger_CLIENT() {

        initComponents();

    }

    public class ClientThread extends Thread {

        String strMsg = ""; //Tin nhắn gửi đi (send)
        String strName = ""; //Tên client
        boolean blnConnect; //Boolean để biết client đã connect hay chưa
        int index = 0;
//Khi tạo đối tượng ClientThread lúc bấm Sign In thì sẽ gắn socket cho server, gửi tên client để server biết ai đã đăng nhập
//ps.println(strName + " has logged in"); là dòng gửi lên server trong phần Constructor

        public ClientThread() {
            try {
                server = new Socket("localhost", 10000); // Server có ip là localhost, port là 10000
                //Tạo biến đệm nhận dữ liệu từ server
                br = new BufferedReader(new InputStreamReader(server.getInputStream()));
                //Tạo biến đệm gửi dữ liệu lên server
                ps = new PrintStream(server.getOutputStream());
                strName = txtClientName.getText(); // Lấy tên client
                ps.println(strName + " has logged in"); //Gửi lên server tên client đã đăng nhập
                txtClientName.setEditable(false); //Ko cho chỉnh sửa field tên client
                btnSignIn.setEnabled(false); // Nút Sign In ko bấm được nữa
                blnConnect = true; //Boolean = true nghĩa là đã đăng nhập

            } catch (IOException ex) {
                //Nếu có lỗi thì ngắt kết nối
                blnConnect = false;
            }

        }
//Sau khi tạo đối tượng xong thì chạy method run (tức là khi khi bấm Sign In, tạo đối tượng ClientThread)
//Nếu Client send 1 đoạn chat thì client sẽ gửi dữ liệu đến server
//Server nhận dữ liệu và xuất ra khung chat của server, sau đó server gửi lại dữ liệu cho Client
//Client nhận được dữ liệu và xuất ra khung chat của Client

        @Override
        public void run() {
            while (true) {
                if (blnConnect) {
                    try { //strMsg được gán dữ liệu của server gửi lại khi chat
                        if ((strMsg = br.readLine()) != null) {
                            //Xuất ra khung chat
                            txaChattingpad.append(strMsg + "\n");
                        }
                    } catch (Exception ex) {
                        //Nếu lỗi thì ngắt kết nối
                        blnConnect = false;
                    }
                }
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlConnect = new javax.swing.JPanel();
        lblHeader1 = new javax.swing.JLabel();
        txtClientName = new javax.swing.JTextField();
        btnSignIn = new javax.swing.JButton();
        btnSignOut = new javax.swing.JButton();
        scpChattingpad = new javax.swing.JScrollPane();
        txaChattingpad = new javax.swing.JTextArea();
        pnlSendMessage1 = new javax.swing.JPanel();
        lblMessage = new javax.swing.JLabel();
        scpMessage = new javax.swing.JScrollPane();
        txaMessage = new javax.swing.JTextArea();
        btnSend = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Chat Client");
        setResizable(false);
        getContentPane().setLayout(new java.awt.FlowLayout());

        pnlConnect.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        pnlConnect.setPreferredSize(new java.awt.Dimension(350, 80));
        pnlConnect.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 12));

        lblHeader1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeader1.setText("Give your name and then click Sign In button.");
        lblHeader1.setPreferredSize(new java.awt.Dimension(310, 20));
        pnlConnect.add(lblHeader1);

        txtClientName.setPreferredSize(new java.awt.Dimension(180, 20));
        pnlConnect.add(txtClientName);

        btnSignIn.setText("Sign In");
        btnSignIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSignInActionPerformed(evt);
            }
        });
        pnlConnect.add(btnSignIn);

        btnSignOut.setText("Log Out");
        btnSignOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSignOutActionPerformed(evt);
            }
        });
        pnlConnect.add(btnSignOut);

        getContentPane().add(pnlConnect);

        scpChattingpad.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        scpChattingpad.setPreferredSize(new java.awt.Dimension(350, 150));

        txaChattingpad.setColumns(20);
        txaChattingpad.setEditable(false);
        txaChattingpad.setRows(5);
        txaChattingpad.setPreferredSize(new java.awt.Dimension(160, 100));
        scpChattingpad.setViewportView(txaChattingpad);

        getContentPane().add(scpChattingpad);

        pnlSendMessage1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        pnlSendMessage1.setPreferredSize(new java.awt.Dimension(350, 70));
        pnlSendMessage1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 10));

        lblMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMessage.setText("Message:");
        lblMessage.setPreferredSize(new java.awt.Dimension(60, 20));
        pnlSendMessage1.add(lblMessage);

        scpMessage.setPreferredSize(new java.awt.Dimension(200, 40));

        txaMessage.setColumns(20);
        txaMessage.setEditable(false);
        txaMessage.setRows(5);
        scpMessage.setViewportView(txaMessage);

        pnlSendMessage1.add(scpMessage);

        btnSend.setText("Send");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });
        pnlSendMessage1.add(btnSend);

        getContentPane().add(pnlSendMessage1);

        setSize(new java.awt.Dimension(383, 347));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
// TODO add your handling code here:
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                String strMessage; //Biến chứa dữ liệu nhập vào khung textarea
                strMessage = txaMessage.getText(); //Lấy dữ liệu nhập vào từ khung textarea
                ps.println(strMessage); //Gửi dữ liệu lên server
                txaChattingpad.append(strMessage + "\n"); //In dữ liệu ra khung chat
                txaMessage.setText(""); //Làm trống khung message
            }
        });

    }//GEN-LAST:event_btnSendActionPerformed

    private void btnSignInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSignInActionPerformed
// TODO add your handling code here:
        if (!txtClientName.getText().trim().equals("")) { //Nếu tên client đã có dữ liệu, khác khoảng trống
            clientThread = new ClientThread(); //Tạo đối tượng ClientThread
            clientThread.start(); //Chạy method run
        } else {// Nếu client chưa có tên thì báo lỗi
            JOptionPane.showMessageDialog(null, "User Name is not Given.");
        }
        txaMessage.setEditable(true);//Cho phép chỉnh sửa tên client

    }//GEN-LAST:event_btnSignInActionPerformed

    private void btnSignOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSignOutActionPerformed
// TODO add your handling code here:
        //Nếu client sign out thì gửi lên server 2 dòng sau và exit
        ps.println("Client has Signed out");
        ps.println("---------Waiting for a new client---------");
        System.exit(0);

    }//GEN-LAST:event_btnSignOutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        //Chỉnh lại giao diện ứng dụng cho giống với giao diện của windows
        try {
            javax.swing.UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Messenger_CLIENT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Messenger_CLIENT().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSend;
    private javax.swing.JButton btnSignIn;
    private javax.swing.JButton btnSignOut;
    private javax.swing.JLabel lblHeader1;
    private javax.swing.JLabel lblMessage;
    private javax.swing.JPanel pnlConnect;
    private javax.swing.JPanel pnlSendMessage1;
    private javax.swing.JScrollPane scpChattingpad;
    private javax.swing.JScrollPane scpMessage;
    private javax.swing.JTextArea txaChattingpad;
    private javax.swing.JTextArea txaMessage;
    private javax.swing.JTextField txtClientName;
    // End of variables declaration//GEN-END:variables

}
